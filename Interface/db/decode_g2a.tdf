--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=10 LPM_WIDTH=4 data eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_g2a
( 
	data[3..0]	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode751w[3..0]	: WIRE;
	w_anode768w[3..0]	: WIRE;
	w_anode778w[3..0]	: WIRE;
	w_anode788w[3..0]	: WIRE;
	w_anode798w[3..0]	: WIRE;
	w_anode808w[3..0]	: WIRE;
	w_anode818w[3..0]	: WIRE;
	w_anode828w[3..0]	: WIRE;
	w_anode838w[3..0]	: WIRE;
	w_anode849w[3..0]	: WIRE;
	w_anode859w[3..0]	: WIRE;
	w_anode869w[3..0]	: WIRE;
	w_anode879w[3..0]	: WIRE;
	w_anode889w[3..0]	: WIRE;
	w_anode899w[3..0]	: WIRE;
	w_anode909w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[1..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode828w[3..3], w_anode818w[3..3], w_anode808w[3..3], w_anode798w[3..3], w_anode788w[3..3], w_anode778w[3..3], w_anode768w[3..3], w_anode751w[3..3]);
	eq_wire2w[] = ( w_anode909w[3..3], w_anode899w[3..3], w_anode889w[3..3], w_anode879w[3..3], w_anode869w[3..3], w_anode859w[3..3], w_anode849w[3..3], w_anode838w[3..3]);
	w_anode751w[] = ( (w_anode751w[2..2] & (! data_wire[2..2])), (w_anode751w[1..1] & (! data_wire[1..1])), (w_anode751w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode768w[] = ( (w_anode768w[2..2] & (! data_wire[2..2])), (w_anode768w[1..1] & (! data_wire[1..1])), (w_anode768w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode778w[] = ( (w_anode778w[2..2] & (! data_wire[2..2])), (w_anode778w[1..1] & data_wire[1..1]), (w_anode778w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode788w[] = ( (w_anode788w[2..2] & (! data_wire[2..2])), (w_anode788w[1..1] & data_wire[1..1]), (w_anode788w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode798w[] = ( (w_anode798w[2..2] & data_wire[2..2]), (w_anode798w[1..1] & (! data_wire[1..1])), (w_anode798w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode808w[] = ( (w_anode808w[2..2] & data_wire[2..2]), (w_anode808w[1..1] & (! data_wire[1..1])), (w_anode808w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode818w[] = ( (w_anode818w[2..2] & data_wire[2..2]), (w_anode818w[1..1] & data_wire[1..1]), (w_anode818w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode828w[] = ( (w_anode828w[2..2] & data_wire[2..2]), (w_anode828w[1..1] & data_wire[1..1]), (w_anode828w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode838w[] = ( (w_anode838w[2..2] & (! data_wire[2..2])), (w_anode838w[1..1] & (! data_wire[1..1])), (w_anode838w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode849w[] = ( (w_anode849w[2..2] & (! data_wire[2..2])), (w_anode849w[1..1] & (! data_wire[1..1])), (w_anode849w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode859w[] = ( (w_anode859w[2..2] & (! data_wire[2..2])), (w_anode859w[1..1] & data_wire[1..1]), (w_anode859w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode869w[] = ( (w_anode869w[2..2] & (! data_wire[2..2])), (w_anode869w[1..1] & data_wire[1..1]), (w_anode869w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode879w[] = ( (w_anode879w[2..2] & data_wire[2..2]), (w_anode879w[1..1] & (! data_wire[1..1])), (w_anode879w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode889w[] = ( (w_anode889w[2..2] & data_wire[2..2]), (w_anode889w[1..1] & (! data_wire[1..1])), (w_anode889w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode899w[] = ( (w_anode899w[2..2] & data_wire[2..2]), (w_anode899w[1..1] & data_wire[1..1]), (w_anode899w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode909w[] = ( (w_anode909w[2..2] & data_wire[2..2]), (w_anode909w[1..1] & data_wire[1..1]), (w_anode909w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
